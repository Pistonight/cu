[package]
name = "cu"
version = "0.3.0"
edition = "2024"
license = "MIT"

[dependencies]
anyhow = "1.0.98"
cu-proc-macros = { path = "../copper-proc-macros", optional = true }
env_filter = "0.1.3"
log = "0.4.27"
oneshot = "0.1.11"
terminal_size = "0.4.2"
unicode-width = { version = "0.2.1", features = ["cjk"] }

# fs
dunce = {version="1.0.5", optional = true}
which = {version = "8.0.0", optional = true }
pathdiff = {version = "0.2.3", optional=true}
spin = {version = "0.10.0", optional = true}

# serde
serde = { version = "1.0.219", features = ["derive"], optional = true }
serde_json = { version = "1.0.142", optional = true }
serde_yaml_ng = { version = "0.10.0", optional = true }
toml = { version = "0.9.5", optional = true }

[dependencies.tokio]
version = "1.47.0" 
features = [ "macros", "rt-multi-thread" ]
optional = true

[dev-dependencies.tokio]
version = "1.47.0" 
features = [ "macros", "rt-multi-thread", "time" ]

[dependencies.clap]
version = "4.5.42"
features = ["derive"]
optional = true

[features]
default = ["full"]
full = [
    "cli",
    "prompt",
    "process",
    "parse",
    "json",
    "yaml",
    "toml",
]

# Command Line Interface (enables integration with `clap` and command line entry points)
cli = ["dep:clap", "dep:cu-proc-macros", "print"]
print = []
# Utils to show prompt for user input in terminal
prompt = []
# Enable coroutine drivers, which allow interop with async
coroutine = ["dep:tokio", "tokio/sync"]
# Enable heavy coroutine drived by multi-threaded tokio runtime
coroutine-heavy = ["coroutine"]
# Enable spawning child processes
process = [
    "coroutine", "fs",
    "dep:spin",
    "tokio/process", "tokio/io-std", "tokio/io-util"
]
# Enable file system and path util
fs = ["dep:which", "dep:pathdiff", "dep:dunce", "tokio?/fs"]
# Enable parsing utils
parse = ["dep:cu-proc-macros"]
serde = ["dep:serde"]
json = ["serde", "dep:serde_json"]
yaml = ["serde", "dep:serde_yaml_ng"]
toml = ["serde", "dep:toml"]

# Internally used to document where nightly feature is used
# (in particular, doc_cfg)
nightly = []

# Static (compile-time) logging toggles
release-nolog= ["log/release_max_level_off"]
release-nodebuglog = ["log/release_max_level_info"]

[[example]]
name = "print"
required-features = ["prompt", "cli"]

[[example]]
name = "process"
required-features = ["prompt", "cli", "process"]
